// how to use:
// add a FreeIva_SeatBelt key to an InternalSeat module and supply the path to the seatbelt model (e.g. FreeIva_SeatBelt = FreeIva/Props/Harness_5pt)

@INTERNAL:HAS[@MODULE[InternalSeat]:HAS[#FreeIva_SeatBelt]]:LAST[FreeIva]
{
	releaseButtonIndex = -1

	// because :HAS will apply to all nodes, we can't just delete the FreeIva_SeatBelt key to mark something as processed
	// instead, change the names of the ones we want to alter, then change them back as we process them
	@MODULE[InternalSeat]:HAS[#FreeIva_SeatBelt],*
	{
		@name = InternalSeat_Belt
	}
}

@INTERNAL:HAS[@MODULE[InternalSeat_Belt]]:LAST[FreeIva]
{
	MM_PATCH_LOOP {}
	
	// note: keys are always applied before nodes
	@releaseButtonIndex += 1

	MODEL
	{
		model = #$/MODULE[InternalSeat_Belt]/FreeIva_SeatBelt$
		name = #SeatBelt_$/releaseButtonIndex$
	}

	MODULE
	{
		name = PropBuckleButton
		transformName = #Release,$/releaseButtonIndex$
		modelName = #$/MODULE[InternalSeat_Belt]/FreeIva_SeatBelt$
	}

	@MODULE[InternalModuleFreeIva]
	{
		Reparent
		{
			childTransformName = #SeatBelt_$/releaseButtonIndex$
			parentTransformName = #$/MODULE[InternalSeat_Belt]/seatTransformName$
			localPosition = 0,0,0
			localRotation = 0,0,0
		}
	}

	@MODULE[InternalSeat_Belt]
	{
		@name = InternalSeat
	}
}

@INTERNAL:HAS[@MODULE[PropBuckleButton]:HAS[#modelName]]:LAST[FreeIva]
{
	@MODULE[PropBuckleButton]:HAS[#modelName[FreeIva/Props/Harness_5pt]],*
	{
		soundName = FreeIva/Sounds/BuckleButton
		-modelName = delete
	}

	@MODULE[PropBuckleButton]:HAS[#modelName[FreeIva/Props/ShoulderBelt]],*
	{
		soundName = FreeIva/Sounds/SeatBelt
		-modelName = delete
	}
}
